<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="io.redbee.boot.oauth.model.OauthUser"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.DisabledException"/>
<fullyQualifiedTypeName name="org.springframework.core.Ordered"/>
<fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletResponse"/>
<fullyQualifiedTypeName name="javax.servlet.FilterChain"/>
<fullyQualifiedTypeName name="javax.servlet.ServletException"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.SessionAttributes"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer"/>
<fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
<fullyQualifiedTypeName name="org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configurers.ResourceServerSecurityConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>
<fullyQualifiedTypeName name="io.redbee.boot.oauth.rederer.CustomDefaultOAuth2ExceptionRenderer"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
<fullyQualifiedTypeName name="io.redbee.boot.oauth.filters.CORSFilter"/>
<fullyQualifiedTypeName name="io.redbee.boot.oauth.handlers.CustomLogoutSuccessHandler"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.WebSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.TokenStore"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.redis.RedisTokenStore"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Primary"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.DefaultTokenServices"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
<fullyQualifiedTypeName name="io.redbee.boot.oauth.services.JdbcUserDetailsService"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="io.redbee.boot.oauth.authorities.populators.JdbcAuthoritiesPopulator"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationProvider"/>
<fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
<fullyQualifiedTypeName name="javax.naming.AuthenticationException"/>
<fullyQualifiedTypeName name="org.springframework.security.core.AuthenticationException"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Profile"/>
<fullyQualifiedTypeName name="org.springframework.web.servlet.config.annotation.ViewControllerRegistry"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
</qualifiedTypeNameHistroy>
